Learn background all time:
   -

- GrabCut
- distanceTransform OpenCV\samples\python\tutorial_code\ImgTrans\distance_transformation\imageSegmentation.py
- watershed
- floodFill

Надо пройтись по туториалам OpenCV
- https://docs.opencv.org/4.0.1/
- https://docs.opencv.org/4.0.1/pages.html
- https://docs.opencv.org/4.0.1/modules.html
- https://docs.opencv.org/4.0.1/examples.html
- https://docs.opencv.org/4.0.1/d2/d94/bioinspired_retina.html
  http://changedetection.net/

Smooth contour:
- http://www.morethantechnical.com/2012/12/07/resampling-smoothing-and-interest-points-of-curves-via-css-in-opencv-w-code/
- https://www.google.com/search?q=opencv+smooth+contour&client=firefox-b-d&tbm=isch&source=iu&ictx=1&fir=ztzgm8649FAVrM%253A%252C9NXn6KNuPh6PTM%252C_&usg=AI4_-kTNeS0xbNoIb7-9957kwzekKXJVAg&sa=X&ved=2ahUKEwj_soHsw6ngAhXFDSwKHSOvBSoQ9QEwC3oECAUQBA&biw=1920&bih=954#imgdii=cILfCORXQnkIpM:&imgrc=ztzgm8649FAVrM:
- https://www.google.com/search?client=firefox-b-d&q=opencv+smooth+contour
- https://stackoverflow.com/questions/38480983/smoothing-rough-edges-contour-opencv
- https://stackoverflow.com/questions/1204553/are-there-any-good-libraries-for-solving-cubic-splines-in-c
- https://stackoverflow.com/questions/22898881/opencv-fit-a-curve-to-a-set-of-points
- https://www.codeproject.com/Articles/30838/Overhauser-Catmull-Rom-Splines-for-Camera-Animatio
- https://agniva.me/scipy/2016/10/25/contour-smoothing.html
- https://stackoverflow.com/questions/31464345/fitting-a-closed-curve-to-a-set-of-points/31466013#31466013

Image similarity:
- http://www.imatest.com/docs/ssim/ SSIM: Structural Similarity Index
- google "structural similarities"
- https://www.pyimagesearch.com/2017/06/19/image-difference-with-opencv-and-python/ Image Difference with OpenCV and Python
- https://www.pyimagesearch.com/2014/09/15/python-compare-two-images/ How-To: Python Compare Two Images
- https://ece.uwaterloo.ca/~z70wang/publications/ssim.pdf
- google "pearson similarity"
- https://stackoverflow.com/questions/1838806/euclidean-distance-vs-pearson-correlation-vs-cosine-similarity Euclidean distance vs Pearson correlation vs cosine similarity?

!!
https://www.geometrictools.com/Books/Books.html

Key points tracking:
- https://docs.opencv.org/3.0-beta/doc/tutorials/features2d/akaze_tracking/akaze_tracking.html AKAZE and ORB planar tracking
- https://docs.opencv.org/3.0-beta/doc/tutorials/features2d/table_of_content_features2d/table_of_content_features2d.html feature2d module. 2D Features framework


- class WorkingArea
    - update_objects(polygons)
    - draw (image)


- работа с цветом
    https://medium.com/datadriveninvestor/skin-segmentation-and-dominant-tone-color-extraction-fe158d24badf
    https://www.learnopencv.com/color-spaces-in-opencv-cpp-python/

- skin detection (and inRange binarization)
    - google "opencv skin color detection"
    - https://stackoverflow.com/questions/10948589/choosing-the-correct-upper-and-lower-hsv-boundaries-for-color-detection-withcv
    - https://github.com/topics/skin-detection
    - https://github.com/HasnainRaz/Skin-Segmentation-TensorFlow A modified SegNet Convolutional Neural Net for segmenting human skin from images

- image segmentation
    - https://github.com/jakeret/tf_unet  Generic U-Net Tensorflow implementation for image segmentation
    - https://arxiv.org/abs/1511.00561    SegNet: A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation
    - http://mi.eng.cam.ac.uk/projects/segnet/ A Deep Convolutional Encoder-Decoder Architecture for Robust Semantic Pixel-Wise Labelling
    - https://github.com/Trevol/caffe-segnet
        - https://github.com/Trevol/caffe-segnet-cudnn5
        - http://mi.eng.cam.ac.uk/projects/segnet/tutorial.html
        - https://github.com/Trevol/SegNet-Tutorial

Numpy:
- https://habr.com/ru/post/413381/   https://habr.com/ru/post/352678/

- может быть делать кадру "perspective transform" (или "inverse perspective transform") - что бы эллипсы превращались в окружности??
- spatial indexing:
    - https://www.slideshare.net/kylinfish/tpr-star-tree-36153522   Tpr star tree
    - https://www.semanticscholar.org/paper/The-TPR*-Tree%3A-An-Optimized-Spatio-Temporal-Access-Tao-Papadias/e4617874f90b6968fee870d1c67f80e1e78611a6
    - https://pdfs.semanticscholar.org/e461/7874f90b6968fee870d1c67f80e1e78611a6.pdf The TPR*-Tree: An Optimized Spatio-Temporal Access Method for Predictive Queries
    - https://www.semanticscholar.org/paper/STR%3A-A-Simple-and-Efficient-Algorithm-for-R-Tree-Leutenegger-Edgington/3c0d3b560cc97ba60441fd7416c3ddf9007e299d STR: A Simple and Efficient Algorithm for R-Tree Packing
    - https://dl.acm.org/citation.cfm?id=1315519  The TPR*-tree: an optimized spatio-temporal access method for predictive queries
    - search "TPR-tree"
    - search "rtree python"
    - https://github.com/Toblerity/rtree  Rtree: spatial index for Python GIS
    - http://toblerity.org/rtree/
    - https://geoffboeing.com/2016/10/r-tree-spatial-index-python/ R-tree Spatial Indexing with Python
    - https://en.wikipedia.org/wiki/R-tree
    - https://stackoverflow.com/questions/2709339/c-r-tree-implementation-wanted
    - http://www.virtualroadside.com/blog/index.php/2008/10/04/r-tree-implementation-for-cpp/
    - https://github.com/nushoin/RTree
    - https://www.boost.org/doc/libs/1_68_0/libs/geometry/doc/html/geometry/spatial_indexes.html
    - https://github.com/libspatialindex/libspatialindex C++ implementation of R*-tree, an MVR-tree and a TPR-tree with C API
    - http://libspatialindex.github.com
    - https://github.com/virtuald/r-star-tree  R* Tree for C++
    - http://www.virtualroadside.com/blog/index.php/2008/10/04/r-tree-implementation-for-cpp/
    - http://en.wikipedia.org/wiki/R*_tree
    - http://dbs.mathematik.uni-marburg.de/publications/myPapers/1990/BKSS90.pdf The R*-tree: An Efficient and Robust Access Method for Points and Rectangles+
- https://en.wikipedia.org/wiki/Nearest_neighbor_search

- auto thresholding for edge detection (для уточнения поиска)
   - https://www.quora.com/How-do-I-set-the-upper-and-lower-threshold-in-canny-edge-detection   #How do I set the upper and lower threshold in canny edge detection?
        - посмотреть ответы - там толковый советы
            - You can find the mean of the grayscale values and keep the lower and higher thresholds as ±25% of the mean.
            - !!! http://www.kerrywong.com/2009/05/07/canny-edge-detection-auto-thresholding/
            - There is another paper “CannyLines”, here they have found the lower and higher thresholds using Helmholtz principle
                    http://cvrs.whu.edu.cn/projects/cannyLines/
            - 1) Perform OTSU segmentation on your image. 2) upperthresh=OTSU(inputgrayscaleimage) 3) lowerthresh=0.5∗upperthresh 4) Choose a suitable scaling factor if .5 doesn’t work for you.
   - https://www.pyimagesearch.com/2015/04/06/zero-parameter-automatic-canny-edge-detection-with-python-and-opencv/




- по мере распознавания "однозначных" эллипсов - запоминать их в отдельный список (или просто заминать средние значения параметров: arcLen, area, axes, angle, углы между вершинами апроксимированного контура) - для дальнейшего распознавания "фрагментов"
- если "быстрых" эллипсов не получается найти, то - переход на сбор эллипсов по фрагментам.
  Если находятся эллипсы их "фрагментов" - не откалиброван процесс или сложные условия (освещение, положение или качество камеры??)